#
# buildspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: default-lambda-deploy
    GOACCESS_VERSION: 1.9.3

phases:
  install:
    runtime-versions:
      nodejs: 20

  pre_build:
    commands:
      - echo "Setting up Build Variables..."
      - BUILD_VERSION=$(date +"%Y%m%d%H%M%S")
      - COMMIT_TAG=gitcommit-${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo "Build Version: $BUILD_VERSION"
      - export BUILD_VERSION
      - mkdir -p dist

  build:
    commands:
      - echo "Building GoAccess Lambda Layer..."
      - cd packages/goaccess-lambda-layer
      - ./scripts/build.sh

      - echo "Uploading Lambda Layer to S3..."
      - aws s3 cp dist/goaccess_layer.zip s3://${deploy_bucket}/${BUILD_VERSION}/goaccess_layer.zip --quiet
      - aws s3 cp dist/goaccess_layer.zip s3://${deploy_bucket}/latest/goaccess_layer.zip --quiet

      - echo "Building Lambda Function..."
      - cd ../../apps/log-stats
      - npm install -g rimraf
      - npm install
      - npm run build

      - echo "Zipping Lambda Function..."
      - rimraf function.zip
      - zip -r function.zip ./*

      - echo "Uploading Lambda Function to S3..."
      - aws s3 cp function.zip s3://${deploy_bucket}/${BUILD_VERSION}/cdn-reporter/function.zip --quiet

      - echo "Creating git commit tag file..."
      - touch ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git
      - aws s3 cp ${CODEBUILD_SRC_DIR}/${COMMIT_TAG}.git s3://${deploy_bucket}/${BUILD_VERSION}/${COMMIT_TAG}.git --quiet

      - echo "Syncing build artifacts to 'latest'..."
      - aws s3 sync s3://${deploy_bucket}/${BUILD_VERSION} s3://${deploy_bucket}/latest --delete --quiet

  post_build:
    commands:
      - echo "Storing Build Version in SSM..."
      - aws --region=$AWS_REGION ssm put-parameter --name /lambdas/${deploy_bucket}/latest --value ${BUILD_VERSION} --type String --overwrite

artifacts:
  files:
    - dist/goaccess_layer.zip
    - apps/log-stats/function.zip
  discard-paths: yes
