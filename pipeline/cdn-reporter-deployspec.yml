#
# deployspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: default-lambda-deploy
    deploy_payload: function.zip
    layer_payload: goaccess_layer.zip

phases:
  install:
    runtime-versions:
      nodejs: 20
#    commands:

  pre_build:
    commands:
      - echo "Retrieving Build Version from SSM..."
      - BUILD_VERSION=$(aws --region=$AWS_REGION ssm get-parameter --name /lambdas/${deploy_bucket}/latest --query 'Parameter.Value' --output text)
      - echo "Build Version: $BUILD_VERSION"
      - export BUILD_VERSION

  build:
    commands:
      #
      # Publish the Lambda layer from S3
      #
      - echo "Publishing Lambda Layer from S3..."
      - aws lambda publish-layer-version \
          --layer-name goaccess-binary \
          --description "GoAccess Lambda Layer version ${BUILD_VERSION}" \
          --content S3Bucket=${deploy_bucket},S3Key=${BUILD_VERSION}/goaccess_layer.zip \
          --compatible-runtimes dotnet8 java21 nodejs20.x python3.12 ruby3.3 provided.al2023 \
          --license-info "MIT"

      #
      # Retrieve the Layer Version ARN
      #
      - echo "Retrieving Layer Version ARN..."
      - LAYER_VERSION_ARN=$(aws lambda list-layer-versions --layer-name goaccess-binary --max-items 1 --query 'LayerVersions[0].LayerVersionArn' --output text)
      - echo "Published Layer ARN: $LAYER_VERSION_ARN"

      #
      # Update the Lambda function to use the new layer
      #
      - echo "Updating Lambda Function to use the new layer..."
      - aws lambda update-function-configuration \
          --function-name uvalib-cdn-reporter-production \
          --layers $LAYER_VERSION_ARN

      #
      # Update Lambda function code from S3
      #
      - echo "Updating Lambda Function Code from S3..."
      - aws lambda update-function-code \
          --function-name uvalib-cdn-reporter-production \
          --s3-bucket ${deploy_bucket} \
          --s3-key ${BUILD_VERSION}/cdn-reporter/function.zip \
          --quiet

      #
      # Sync the latest folder in S3
      #
#      - echo "Syncing latest folder in S3..."
#      - aws s3 sync s3://${deploy_bucket}/${BUILD_VERSION} s3://${deploy_bucket}/latest --delete --quiet

artifacts:
  files:
    - dist/goaccess_layer.zip
    - apps/log-stats/function.zip
  discard-paths: yes
