#
# deployspec.yml
#

version: 0.2

env:
  variables:
    deploy_bucket: default-lambda-deploy
    deploy_payload: latest/cdn-reporter/function.zip
    layer_payload: latest/goaccess_layer.zip

phases:
  install:
    runtime-versions:
      nodejs: 20
#    commands:

#  pre_build:
#    commands:

  build:
    commands:
      #
      # Update Lambda function code from S3
      #
      - echo "Updating Lambda Function Code from S3..."
      - |
        aws lambda update-function-code \
          --function-name uvalib-cdn-reporter-production \
          --s3-bucket ${deploy_bucket} \
          --s3-key ${deploy_payload}

      #
      # Publish the Lambda layer from S3
      #
      - echo "Publishing Lambda Layer from S3..."
      - |
        aws lambda publish-layer-version \
          --layer-name goaccess-binary \
          --description "GoAccess Lambda Layer version" \
          --content S3Bucket=${deploy_bucket},S3Key=${layer_payload} \
          --compatible-runtimes dotnet8 java21 nodejs20.x python3.12 ruby3.3 provided.al2023 \
          --license-info "MIT"

      #
      # Retrieve the Layer Version ARN
      #
      - echo "Retrieving Layer Version ARN..."
      - LAYER_VERSION_ARN=$(aws lambda list-layer-versions --layer-name goaccess-binary --max-items 1 --query 'LayerVersions[0].LayerVersionArn' --output text | head -1)
      - echo "Published Layer ARN ${LAYER_VERSION_ARN}"

      #
      # dont like this at all...
      #
      #- echo "Sleeping for 10 seconds to give update command a chance to complete..."
      #- sleep 10

      #
      # Update the Lambda function to use the new layer
      #
      - echo "Updating Lambda Function to use the new layer..."
      - |
        aws lambda update-function-configuration \
          --function-name uvalib-cdn-reporter-production \
          --layers ${LAYER_VERSION_ARN}

#
# end of file
#
