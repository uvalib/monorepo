import{D as e}from"./document-77724c06.js";import{G as t}from"./GeneralSearchResult-331b56d5.js";import{G as i}from"./ArticlesData-ef19c3aa.js";const s="https://mlbib.library.virginia.edu/json/extras.json",r="https://mlbib.library.virginia.edu/json/years.json";class a extends t{constructor(e){super(e)}}class n extends i{constructor(t){super(),this.searchIndex=new e({document:{id:"id",index:["plainText"],store:["title","year","plainText"]}}),this.searchReady=!1,this.items=[],this.ids=[],this.indexes=[],Object.assign(this,t),this.indexes.length||(this.indexes=[s,r]),this.initSearchIndex()}async initSearchIndex(){try{(await Promise.all(this.indexes.map((e=>fetch(e).then((e=>e.json())))))).flat().forEach((e=>{this.searchIndex.add(e)})),this.searchReady=!0}catch(e){console.error("Error initializing search index:",e)}}async fetchData(){return(async()=>{for(;!this.searchReady;)await new Promise((e=>setTimeout(e,100)));const e=this.searchIndex.search(this.query||"",{enrich:!0});if(!e||!e[0]||!e[0].result)return console.warn("No search results found or unexpected result structure."),{items:[],meta:{}};return{items:e[0].result.map((e=>function(e,t){console.log(e);const i=e.id.match(/^\d+$/)?`https://mlbib.library.virginia.edu/year/${e.id}.html?query=${t}`:e.id.startsWith("anchor")&&e.doc.year?`https://mlbib.library.virginia.edu/${e.id.replace("anchor-",`year/${e.doc.year}.html?query=${t}#`)}`:`https://mlbib.library.virginia.edu/${e.id}.html?query=${t}`;return new a({id:e.id,title:e.doc.title,description:e.doc.plainText,year:e.doc.year,link:i})}(e,this.query))),meta:{}}})()}}export{n as M,r as a,a as b,s as m};
