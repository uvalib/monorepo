{"version":3,"file":"DHAtUVAData.js","sourceRoot":"","sources":["../../../data-wrap/src/DHAtUVAData.ts"],"names":[],"mappings":";;AAsBA,MAAM,OAAO,WAAW;IAAxB;;QAEI,UAAK,GAAmB,EAAE,CAAC;QAE3B,UAAK,GAAmB,EAAE,CAAC;IA8C7B,CAAC;IA5CC,KAAK,CAAC,SAAS;QACb,oEAAoE;QACpE,MAAM,IAAI,GAAG,MAAM,MAAM,CAAC,0BAA0B,CAAC,CAAC;QACtD,uBAAA,IAAI,sDAAW,MAAf,IAAI,EAA0B,IAAI,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;QACpD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CAuCF;iGArCa,IAAiB;IAC3B,MAAM,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC;IAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAA,EAAE;QAClB,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAG,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE;YAC9D,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;YAChC,MAAM,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;YACzC,IAAI,GAAG,EAAE;gBACP,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,EAAE,CAAA,EAAE;oBACzB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;wBACzB,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;wBACjB,oCAAoC;wBACpC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAC,EAAE,EAAE,IAAI,EAAC,EAAE,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,yEAAyE,EAAE,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,CAAC;qBAChJ;oBACD,gCAAgC;oBAChC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,EAAE,EAAE,IAAI,EAAC,oBAAoB,EAAC,CAAC,CAAC;gBACrE,CAAC,CAAC,CAAA;aACH;YACD,8BAA8B;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAE,yEAAyE,EAAE,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,CAAC;SACrI;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAG,QAAQ,EAAE;YAC5C,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAA;YACtB,6BAA6B;YAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAE,2EAA2E,EAAE,IAAI,EAAE,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,CAAC;YACrI,+BAA+B;YAC/B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAA,EAAE,CAAA,IAAI,CAAC,IAAI,CAAC,UAAU,KAAG,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAA,EAAE;gBAC/D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,EAAE,EAAE,MAAM,EAAC,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAC,CAAC,CAAC;YACjH,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAG,OAAO,EAAE;YAC3C,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAA;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAE,uFAAuF,EAAE,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,CAAA;SAChJ;aAAM,IAAI,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,KAAG,eAAe,EAAE;YACnD,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAA;YACvB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,EAAE,EAAE,IAAI,EAAC,OAAO,EAAE,GAAG,EAAC,qFAAqF,EAAE,IAAI,EAAC,CAAC,EAAE,EAAC,EAAE,CAAC,EAAC,CAAC,CAAA;SAC7I;IACL,CAAC,CAAC,CAAA;AACJ,CAAC","sourcesContent":["interface DHNode {\n    node: { \n        title: string | undefined; \n        Name: string | undefined;\n        Email: string | undefined;\n        Body: string | undefined;\n        Subtitle: string | undefined;\n        \"UVA ID\": string | undefined;\n        \"I am connected to:\": string | undefined; \n        Instructor: string | undefined; \n        \"My connection type is:\": string | undefined;\n        \"Content Type\": string | undefined;\n        \"Project URL\": string | undefined;\n        \"Technical Approach\": string | undefined;\n        \"Secondary PDF/word doc\": string | undefined;\n    };     \n}\n\ninterface DHNodeItems {\n    nodes: Array<DHNode>\n}\n\nexport class DHAtUVAData {\n\n    nodes: Array<unknown> = [];\n\n    edges: Array<unknown> = [];\n  \n    async fetchData(){\n      // This should be fetched live from the site under normal conditions\n      const data = await import('./data/graph-data-api.js');\n      this.#parseData( <DHNodeItems>data.default.DHData );\n      return data.default;\n    }\n  \n    #parseData( data: DHNodeItems ){    \n      const techApps = new Set();\n      data.nodes.forEach(n=>{\n          if (n.node['Content Type']===\"Projects\" && n.node['Project URL']) {\n              const id = n.node['Project URL']\n              const tas = n.node['Technical Approach'];\n              if (tas) {\n                tas.split(\",\").forEach(ta=>{\n                  if (ta && !techApps.has(ta)) {\n                      techApps.add(ta);\n                      // push Tech Approach onto the stack\n                      this.nodes.push({id:ta, desc:ta, type:'image', img:'https://site-assets.fontawesome.com/releases/v6.2.0/svgs/solid/book.svg', size:[15,15]});\n                  }\n                  // push tech app -> project edge\n                  this.edges.push({source:id, target:ta, desc:\"Technical Approach\"});\n                })\n              }\n              // push project onto the stack\n              this.nodes.push({id, type:'image', img: 'https://site-assets.fontawesome.com/releases/v6.2.0/svgs/solid/gear.svg', size:[20,20]});\n          } else if (n.node['Content Type']===\"People\") {\n            const id = n.node.Name\n            // push person onto the stack\n            this.nodes.push({id, type:'image', img: 'https://site-assets.fontawesome.com/releases/v6.2.0/svgs/solid/person.svg', size: [15,20]});\n            // create edges for this person\n            data.nodes.filter(node=>node.node.Instructor===id).forEach(node=>{\n              this.edges.push({source:id, target:node.node['I am connected to:'], desc:node.node['My connection type is:']});\n            });\n          } else if (n.node['Content Type']===\"Tools\") {\n            const id = n.node.title\n            this.nodes.push({id, type:'image', img: 'https://site-assets.fontawesome.com/releases/v6.2.0/svgs/solid/screwdriver-wrench.svg', size:[15,15]})\n          } else if (n.node['Content Type']===\"Organizations\") {\n            const id = n.node.title\n            this.nodes.push({id, type:'image', img:'https://site-assets.fontawesome.com/releases/v6.2.0/svgs/solid/building-columns.svg', size:[15,15]})\n          }\n      })       \n    }\n  \n  }"]}